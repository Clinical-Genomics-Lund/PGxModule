singularity{
  enabled                         = true	
  runOptions                      = "--bind /fs1/ --bind /local/ --bind /fs2/ --bind /mnt/beegfs/"
}

env{
  SENTIEON_LICENSE                = "10.139.0.101:8990"
  bwt_max_mem                     = "50G"
}

params {

  // CPU counts //
  cpu_all                         = 50
  cpu_many                        = 16
  cpu_some                        = 8

  queue                           = "high"
  git                             = "$baseDir/git.hash"
  containers                      = "/fs1/resources/containers/"
  container                       = "${params.containers}/SomaticPanelPipeline_2021-06-24.sif" // For Sentieon and others
  baseDir                         = "$baseDir"

  // results dir //
  resultsdir                      = "/fs1/ram/Testing/PGx_Module/Results"
  dev                             = false
  dev_suffix                      = ""
  if (params.dev) {
    dev_suffix                    = "_dev"
  }

  // Input CSV file //
  csv_file                        = "/fs1/ram/Testing/PGx_Module/test_data/EBI/ERR1955390/somatic_solid_hg38_analysis/NA20296_PGx.csv"

  // Workflow Image //
  workflow_image                  = "$baseDir/resources/workflow_images/PGx.png"

}

process {
  executor                        = "slurm"
  queue                           = params.queue
  time                            = 48.h
  container                       = params.container
}

executor {
    name                          = 'slurm'
    queueSize                     = 10
    pollInterval                  = '5 sec'
}


manifest {
    name                          = "PGxPipeline"
    author                        = "CMD Lund"
    homePage                      = "https://github.com/ramsainanduri/PGxModule"
    description                   = "Genotyping for Pharmacogenes and annotate them with relevant guidelines and clinical significance from WGS/WES of cancer patients"
    mainScript                    = "main.nf"
    nextflowVersion               = "!>=21.10.3"
    version                       = "2.0.1"
}

profiles {

  pgx {
    // databases and resources
    params.pgx_resources          = "$baseDir/resources/"
    params.clinical_guidelines    = "${params.pgx_resources}/guidelines/clinical_guidelines.csv"
    params.haplotype_activity     = "${params.pgx_resources}/guidelines/haplotype_activity_score.csv"
    params.interacting_guidelines = "${params.pgx_resources}/guidelines/interaction_guidelines.csv"
    params.haplotype_definitions  = "${params.pgx_resources}/haplotypes/haplotype_definitions.csv"
    params.hidden_haplotypes      = "${params.pgx_resources}/haplotypes/hidden_haplotpyes.csv"

  
    // Containers
    params.python_image           = "${params.containers}/target_variants_python.simg"
    params.samtools_image         = "${params.containers}samtools.simg"
    params.gatk4_image            = "${params.containers}/gatk4.simg"
    params.gatk3_image            = "${params.containers}/gatk3.simg"
    params.rmarkdown_image        = "${params.containers}/rmarkdown.sif"
    params.bcftools_image         = "${params.containers}/bcftools.sif"

    // Filters
    params.padding                = 100
    params.read_ratio             = 0.2
    params.DP                     = 50

    // Callers
    params.haplotyper             = "SENTIEON" // GATK or SENTIEON

  }
  
  hg19 {
    params.refpath                = "/fs1/resources/ref/hg19/"
    params.genome_file            = "${params.refpath}/fasta/human_g1k_v37_decoy.fasta"
    params.gene_regions           = "${params.refpath}/gtf/gencode.v19.exons.sort.merge.bed"
    params.pgxref_folder          = "${params.pgx_resources}/HG19/"
    params.pgx_target_regions     = "${params.pgxref_folder}/genomic_regions/exons_variants_pharmacogenomics_18_06_2019_ex_cyp2d6_HG19.bed"
    params.pgx_target_rsid        = "${params.pgxref_folder}/genomic_regions/target_rsid_HG19.bed"
    params.dbSNP                  = "${params.refpath}/annotation_dbs/All_20180423_HG19_151.vcf.gz"
    params.addchr                 = "True"
    params.dbSNP_version          = "151"
    params.ref_version            = "HG19"
  }

  hg38 {
    params.refpath                = "/fs1/resources/ref/hg38/"
    params.genome_file            = "${params.refpath}/fasta/GCA_000001405.15_GRCh38_no_alt_analysis_set_nochr.fna"
    params.GENOMEDICT             = "${params.refpath}/fasta/GCA_000001405.15_GRCh38_no_alt_analysis_set_nochr.dict"
    params.gene_regions           = "${params.refpath}/gtf/gencode.v33.exons.sort.merge.bed"
    params.pgxref_folder          = "${params.pgx_resources}/HG38/"
    params.pgx_target_regions     = "${params.pgxref_folder}/genomic_regions/exons_variants_pharmacogenomics_18_06_2019_ex_cyp2d6_hg38.bed"
    params.pgx_target_rsid        = "${params.pgxref_folder}/genomic_regions/target_rsid_hg38.bed"
    params.addchr                 = "False"
    params.dbSNP                  = "${params.refpath}/annotation_dbs/All_20180418_HG38_151.vcf.gz"
    params.dbSNP_version          = "151"
    params.ref_version            = "GCA_000001405.15_GRCh38"
  }

  // This is identical to the hg38 profile, except that it uses a modified version of the reference fasta
  // which masks an incorrectly added region in hg38 which makes all reads in U2AF1 multi-mapped.
  // https://www.biorxiv.org/content/10.1101/2021.05.07.442430v1
  hg38_u2af1 {
    params.refpath                = "/fs1/resources/ref/hg38/"
    params.genome_file            = "${params.refpath}/fasta/GRCh38.u2af1_fix.v1.2020_04_01.nochr.fa"
    params.GENOMEDICT             = "${params.refpath}/fasta/GRCh38.u2af1_fix.v1.2020_04_01.nochr.dict"
    params.gene_regions           = "${params.refpath}/gtf/gencode.v33.exons.sort.merge.bed"
    params.pgxref_folder          = "${params.pgx_resources}/HG38/"
    params.pgx_target_regions     = "${params.pgxref_folder}/genomic_regions/exons_variants_pharmacogenomics_18_06_2019_ex_cyp2d6_hg38.bed"
    params.pgx_target_rsid        = "${params.pgxref_folder}/genomic_regions/target_rsid_hg38.bed"
    params.addchr                 = "False"
    params.dbSNP                  = "${params.refpath}/annotation_dbs/All_20180418_HG38_151.vcf.gz"
    params.dbSNP_version          = "151"
    params.ref_version            = "GRCh38.u2af1_fix.v1.2020_04_01"
  }

  myeloid {
    params.outdir                 = "${params.resultsdir}${params.dev_suffix}"
    params.subdir                 = "myeloid38/pgx"
    params.crondir                = "${params.outdir}/cron/"
    params.assay                  = "myeloid"

    // BED //
    params.regions_bed            = "${params.refpath}/bed/myeloid-twist/all_targets_padded.bed"
    params.regions_proteincoding  = "${params.refpath}/bed/myeloid-twist/all_targets_onlycoding.bed"
    params.interval_list          = "${params.refpath}/bed/myeloid-twist/all_targets_padded.interval_list"

    // PIPELINE PARAMS //
    params.coyote_group           = "PGx"
    params.reports_path           = "${params.outdir}/${params.subdir}/pgx/reports"
    params.cdm                    = "PGx"
  }

  solid {
    params.outdir                 = "${params.resultsdir}${params.dev_suffix}"
    params.subdir                 = "solid_hg38/pgx"
    params.crondir                = "${params.outdir}/cron/"
    params.assay                  = "solid"

    // BED //
    params.regions_bed            = "${params.refpath}/bed/twist-st/pool1_padded20bp_pool2probes.sort.bed"
    params.interval_list          = "${params.refpath}/bed/twist-st/pool1_padded20bp_pool2probes.sort.interval_list"
    params.regions_proteincoding  = "${params.refpath}/bed/twist-st/merged_probe_Gruvberger_GMS_st_v2_pool1_2_sort_coding_merge.bed"

    // PIPELINE PARAMS //
    params.coyote_group           = "PGx"
    params.reports_path           = "${params.outdir}/${params.subdir}/pgx/reports"
    params.cdm                    = "PGx"
  }
}
